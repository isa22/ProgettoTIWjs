package dao;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.Statement;

import org.apache.commons.lang.StringEscapeUtils;

import java.sql.ResultSet;
import java.sql.SQLException;

import beans.User;

public class UserDAO {
	private Connection connection;
	
	public UserDAO(Connection connection) {
		this.connection = connection;
	}
	
	//insert of a new user
	public User insertUser(String username, String password, String email) throws SQLException {
		User user = null;
		String query = "INSERT INTO dbtiwexam1920js.user(username, password, email) VALUES (?, ?, ?)";
		PreparedStatement pstatement = null;
		if (!isPresent(username, email)) {
			try {
				pstatement = connection.prepareStatement(query, Statement.RETURN_GENERATED_KEYS);
				pstatement.setString(1, username);
				pstatement.setString(2, password);
				pstatement.setString(3, email);
				pstatement.executeUpdate();
	
				ResultSet tableKeys = pstatement.getGeneratedKeys();
				tableKeys.next();
				int autoGeneratedID = tableKeys.getInt(1);	//the db set a new autoincremented id for the user
				
				user = new User();
				user.setId(autoGeneratedID);
				user.setUsername(username);
				user.setEmail(email);
				
			} catch (SQLException e) {
			    e.printStackTrace();
				throw new SQLException(e);
	
			} finally {
				
				try {
					pstatement.close();
				} catch (Exception e2) {
					throw new SQLException(e2);
				}
			}			
		}
		return user;
	}
	
	//authentication of the user
	public User authenticateUser(String username, String password) throws SQLException {
		User user = null;
		String query = "SELECT * FROM dbtiwexam1920js.user WHERE username = ? and password = ?";
		ResultSet result = null;
		PreparedStatement pstatement = null;
		
		try {
			pstatement = connection.prepareStatement(query);
			pstatement.setString(1, username);
			pstatement.setString(2, password);
			result = pstatement.executeQuery();
			while (result.next()) {
				user = new User();
				user.setId(result.getInt("id"));
				user.setUsername(StringEscapeUtils.unescapeJava(result.getString("username")));
				user.setEmail(StringEscapeUtils.unescapeJava(result.getString("email")));
			}
		} catch (SQLException e) {
		    e.printStackTrace();
			throw new SQLException(e);

		} finally {
			try {
				result.close();
			} catch (Exception e1) {
				throw new SQLException(e1);
			}
			try {
				pstatement.close();
			} catch (Exception e2) {
				throw new SQLException(e2);
			}
		}		
		return user;
	}
	
	//check if the username and the password choosen by the user are already used
	public boolean isPresent(String username, String email) throws SQLException {
		String query = "SELECT * FROM dbtiwexam1920js.user WHERE username = ? or email = ?";
		ResultSet result = null;
		PreparedStatement pstatement = null;
		try {
			pstatement = connection.prepareStatement(query);
			pstatement.setString(1, username);
			pstatement.setString(2, email);
			result = pstatement.executeQuery();
			if (!result.isBeforeFirst()) // no results, credential check failed
				return false;
			else {
				return true;
			}
		} catch (SQLException e) {
		    e.printStackTrace();
			throw new SQLException(e);

		} finally {
			try {
				result.close();
			} catch (Exception e1) {
				throw new SQLException(e1);
			}
			try {
				pstatement.close();
			} catch (Exception e2) {
				throw new SQLException(e2);
			}
		}
	}
	
}
